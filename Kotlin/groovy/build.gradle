apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'groovyx.grooid.groovy-android'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"


    defaultConfig {
        applicationId "com.simon.groovy"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    gradle.taskGraph.whenReady { taskGraph ->
//        if (taskGraph.hasTask(release)) {
//            defaultConfig.versionCode = 20
//            defaultConfig.versionName = "2.0"
//        } else {
//            defaultConfig.versionCode = 30
//            defaultConfig.versionName = "3.0"
//        }
//
//    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'org.codehaus.groovy:groovy:2.4.0:grooid'
}



task hello {
    doLast {
        println 'hello world'
    }
}

task hello2 << {
    println('hello 2')
}


task count << {
    4.times {
        println("$it")
    }
}

task intro(dependsOn: count) << {
    println("gradle")
}


4.times {
    it ->
        task "task$it" << {
            println("i'm task$it")
        }
}

task0.dependsOn task1, task2

//这里第四个行为中 << 操作符是 doLast 的简单别称
task hello3 << {
    println("0")
}

hello3.doFirst {
    println("1")
}

hello3.doLast {
    println("2")
}

hello3 << {
    println("3")
}

task hello4 << {
    println("hello world")
}

hello4.doLast {
    println("greeting from ${hello4.name} task")
}


task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties << {
    println(myTask.myProperty)
}

task loadFile << {
    def files = file('../build').listFiles().sort()
    files.each { File file ->
        if (file.isFile()) {
            ant.loadfile(srcFile: file, property: file.name)
            println("${file.name}")
            println("${ant.properties[file.name]}")
        }
    }
}


defaultTasks 'clean1', 'run1'

task clean1 << {
    println 'Default Cleaning!'
}

task run1 << {
    println 'Default Running!'
}



task distribution << {
    println "We build the zip with version=$version"
}

task release(dependsOn: distribution) << {
    println 'We release now'
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(release)) {
        version = "1.0"
    } else {
        version = "1.0-SNAPSHOT"
    }

}


description = "this is my description"

task(simon) << {
    println("simon")
    description 'thi is a'
}

tasks.create(name: "simon1") << {
    println("simon1")
}


simon.mustRunAfter(simon1)


task simon(overwrite: true) << {
    println("this is my copy")
}


FileCollection collection = files('./groovy.iml', 'src/AndroidManifest.xml')


task fileTask << {
    collection.each { File file ->
        println("${file.name} path = ${file.path}")
        String greeting = "${file.name} path = ${file.path}"
        ant.echo(message:greeting)
        logger.info("debug")
    }
}














